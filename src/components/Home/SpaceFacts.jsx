import React, { useState, useEffect } from "react";
import { GenAI } from "../../lib/genai";
import { FiRefreshCw, FiInfo } from "react-icons/fi";
import { motion, AnimatePresence } from "framer-motion";

export default function SpaceFacts() {
  const [spaceFact, setSpaceFact] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showTooltip, setShowTooltip] = useState(false);

  const prompt =
    "Generate a unique and fascinating one-line space fact every time, including fun, surprising, and mind-blowing details about the universe";

  const fetchSpaceFact = async () => {
    try {
      setIsLoading(true);
      setError(null);
      const response = await GenAI(prompt);
      setSpaceFact(response);
    } catch (err) {
      setError("Failed to fetch space fact. Please try again.");
      console.error(err);
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    fetchSpaceFact();
  }, []);

  return (
    <div className="mb-8 relative">
      <div className="flex items-center justify-between mb-2">
        <h4 className="text-sm font-semibold text-gray-400 flex items-center">
          Did You Know?
          <div className="relative ml-2">
            <FiInfo 
              className="text-gray-500 cursor-pointer" 
              size={14}
              onMouseEnter={() => setShowTooltip(true)}
              onMouseLeave={() => setShowTooltip(false)}
            />
            <AnimatePresence>
              {showTooltip && (
                <motion.div
                  initial={{ opacity: 0, y: 5 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: 5 }}
                  className="absolute bottom-full left-0 mb-2 w-64 p-2 text-xs bg-gray-800 border border-gray-700 rounded shadow-lg z-10"
                >
                  Facts are generated by AI and may contain inaccuracies. Refresh for new facts!
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        </h4>
        <button
          onClick={fetchSpaceFact}
          disabled={isLoading}
          className={`text-xs flex items-center gap-1 ${isLoading ? 'text-gray-500' : 'text-blue-400 hover:text-blue-300'}`}
        >
          <FiRefreshCw className={`${isLoading ? 'animate-spin' : ''}`} size={12} />
          {isLoading ? 'Generating...' : 'New Fact'}
        </button>
      </div>

      <div className="bg-gray-800 bg-opacity-50 p-4 rounded-lg border border-gray-700 min-h-[80px] flex items-center">
        {error ? (
          <p className="text-sm text-red-400">{error}</p>
        ) : isLoading && !spaceFact ? (
          <div className="flex items-center gap-2 text-sm text-gray-400">
            <div className="w-4 h-4 border-2 border-blue-400 border-t-transparent rounded-full animate-spin"></div>
            Generating fascinating space fact...
          </div>
        ) : (
          <motion.p 
            key={spaceFact}
            initial={{ opacity: 0, y: 5 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-sm"
          >
            {spaceFact || "The universe is expanding faster than we thought!"}
          </motion.p>
        )}
      </div>

      <style jsx>{`
        .min-h-[80px] {
          min-height: 80px;
        }
      `}</style>
    </div>
  );
}